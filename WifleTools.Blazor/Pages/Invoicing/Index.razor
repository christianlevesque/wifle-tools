@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Logging
@using WifleTools.Pdf
@inherits ActionPageBase<Index, Invoice>
@attribute [Route(Urls.Invoices.Index)]

<Listicle Title="Invoices"
          Items="_invoices">
	<Renderer>
		<ListicleItem Title="@context.For">
			<HeaderActions>
				<MudIconButton Icon="@Icons.Material.Filled.Send"
				               Color="Color.Secondary"
				               OnClick="@(() => DownloadPdf(context))"/>
				<MudIconButton Icon="@Icons.Material.Filled.Edit"
				               Href="@($"{Urls.Invoices.Index}/{context.Id}")"
				               Color="Color.Primary"/>
			</HeaderActions>
			<BodyContent>
				<MudText>
					@($"{context.Client.Name} ({context.Date:d})")
				</MudText>
				<MudText>
					Words: @context.Amount
				</MudText>
				<MudText>
					Rate: @context.Client.Rate.ToCurrencyString()
				</MudText>
				<MudText>
					Invoice total: @InvoiceUtils.GetInvoiceAmount(context).ToCurrencyString()
				</MudText>
			</BodyContent>
		</ListicleItem>
	</Renderer>
</Listicle>

@code {

	[Inject]
	private InvoicePdfGenerator InvoiceGenerator { get; set; } = default!;

	private List<Invoice>? _invoices;

	/// <inheritdoc />
	protected override Task OnAfterRenderAsync(bool firstRender)
	{
		if (!firstRender) return Task.CompletedTask;

		return SubmitRequest(
			async () =>
			{
				_invoices = await Service.Get(
					set =>
					{
						return set.Include(i => i.Recipient)
							.Include(i => i.Client)
							.Include(i => i.Account);
					});
			});
	}

	private  Task DownloadPdf(Invoice invoice)
		=> InvoiceGenerator.Generate(invoice);
}